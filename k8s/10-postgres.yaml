apiVersion: v1
kind: Secret
metadata:
name: postgres-secret
namespace: yoga-booker
stringData:
POSTGRES_DB: yoga
POSTGRES_USER: yoga
POSTGRES_PASSWORD: yoga
---
apiVersion: v1
kind: ConfigMap
metadata:
name: postgres-init
namespace: yoga-booker
binaryData:
01_classes.sql: |-
{{BASE64:db/init/01_classes.sql}}
02_bookings.sql: |-
{{BASE64:db/init/02_bookings.sql}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
name: postgres
namespace: yoga-booker
spec:
serviceName: postgres
replicas: 1
selector:
matchLabels: {app: postgres}
template:
metadata:
labels: {app: postgres}
spec:
containers:
- name: postgres
image: postgres:16
ports:
- containerPort: 5432
env:
- name: POSTGRES_DB
valueFrom: {secretKeyRef: {name: postgres-secret, key: POSTGRES_DB}}
- name: POSTGRES_USER
valueFrom: {secretKeyRef: {name: postgres-secret, key: POSTGRES_USER}}
- name: POSTGRES_PASSWORD
valueFrom: {secretKeyRef: {name: postgres-secret, key: POSTGRES_PASSWORD}}
volumeMounts:
- name: data
mountPath: /var/lib/postgresql/data
- name: init
mountPath: /docker-entrypoint-initdb.d
volumes:
- name: init
configMap:
name: postgres-init
volumeClaimTemplates:
- metadata:
name: data
spec:
accessModes: ["ReadWriteOnce"]
resources:
requests:
storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
name: postgres
namespace: yoga-booker
spec:
type: ClusterIP
selector: {app: postgres}
ports:
- name: pg
port: 5432
targetPort: 5432
