apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: yoga-booker
stringData:
  RABBITMQ_USER: rabbit
  RABBITMQ_PASS: rabbit
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: yoga-booker
spec:
  serviceName: rabbitmq
  replicas: 1
  selector:
    matchLabels: {app: rabbitmq}
  template:
    metadata:
      labels: {app: rabbitmq}
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.13-management
          ports:
            - containerPort: 5672   # AMQP
            - containerPort: 15672  # HTTP mgmt
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom: {secretKeyRef: {name: rabbitmq-secret, key: RABBITMQ_USER}}
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom: {secretKeyRef: {name: rabbitmq-secret, key: RABBITMQ_PASS}}
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: yoga-booker
spec:
  selector: {app: rabbitmq}
  type: ClusterIP
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: http
      port: 15672
      targetPort: 15672
