apiVersion: apps/v1
kind: Deployment
metadata:
name: class-service
namespace: yoga-booker
spec:
replicas: 2
selector:
matchLabels: {app: class-service}
template:
metadata:
labels: {app: class-service}
spec:
containers:
- name: app
image: docker.io/eandmsz/yoga-class-service:1.0.0
ports:
- containerPort: 8000
env:
- name: DATABASE_URL
value: postgresql://yoga:yoga@postgres.yoga-booker.svc.cluster.local:5432/yoga
- name: ADMIN_TOKEN
valueFrom:
secretKeyRef: {name: postgres-secret, key: POSTGRES_PASSWORD}
livenessProbe:
httpGet: {path: /health, port: 8000}
initialDelaySeconds: 10
periodSeconds: 10
readinessProbe:
httpGet: {path: /health, port: 8000}
initialDelaySeconds: 5
periodSeconds: 5
resources:
requests: {cpu: "50m", memory: "64Mi"}
limits: {cpu: "500m", memory: "256Mi"}
---
apiVersion: v1
kind: Service
metadata:
name: class-service
namespace: yoga-booker
spec:
type: ClusterIP
selector: {app: class-service}
ports:
- name: http
port: 8000
targetPort: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
name: class-service-hpa
namespace: yoga-booker
spec:
scaleTargetRef:
apiVersion: apps/v1
kind: Deployment
name: class-service
minReplicas: 2
maxReplicas: 10
metrics:
- type: Resource
resource:
name: cpu
target:
type: Utilization
averageUtilization: 60
